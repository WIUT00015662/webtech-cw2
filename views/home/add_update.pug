include ../head.pug
body
  .form
    h1 #{mode}
    .form-group
      label(for="title" class="form-label") Title
      input(type="text" class="form-control" id="title" name="title" required)
    .form-group
      label(for="description" class="form-label") Description
      input(type="text" class="form-control" id="description" name="description" required)
    .form-group
      label(for="date" class="form-label") Date
      .input-group.date(id="datetimepicker1" data-target-input="nearest")
        input(type="text" class="form-control datetimepicker-input" data-target="#datetimepicker1" id="date" name="date" required)
        .input-group-append(data-target="#datetimepicker1" data-toggle="datetimepicker")
          .input-group-text
            i.fas.fa-calendar-alt
    .form-group
      label(for="location" class="form-label") Location
      input(type="tel" class="form-control" id="location" name="location" required)
    .form-group
      label(for="organizer" class="form-label") Organizer
      input(type="text" class="form-control" id="organizer" name="organizer" required)
    button(type="submit" class="btn btn-success" onclick="submitForm()") #{mode === 'Update' ? 'Update' : 'Add'}
    span &nbsp;
    button(type="submit" class="btn btn-primary" onclick="window.location.href='/'") Back to Events
  script.
    const format = 'DD/MM/YYYY HH:mm'
    const picker = new tempusDominus.TempusDominus(document.getElementById('datetimepicker1'),{
        localization: {
            'locale': 'fr'
        }
    })
    picker.dates.formatInput = function(date) {
        return moment(date).format(format)
    }

    if ("#{mode}" === "Update") {
      const eventData = !{JSON.stringify(eventData || {})}.event;
      document.getElementById('title').value = eventData.title || '';
      document.getElementById('description').value = eventData.description || '';

      picker.dates.setValue(
        new tempusDominus.DateTime(moment(eventData.date, format))
      );

      document.getElementById('location').value = eventData.location || '';
      document.getElementById('organizer').value = eventData.organizer || '';
    }

    function submitForm() {
      const eventData = {
        title: document.getElementById('title').value,
        description: document.getElementById('description').value,
        date: document.getElementById('date').value,
        location: document.getElementById('location').value,
        organizer: document.getElementById('organizer').value,
      };

      const url = "#{mode}" === "Update" ? `/api/event/${!{JSON.stringify(eventData || {})}.id}` : '/api/event';
      const method = "#{mode}" === "Update" ? 'put' : 'post';

      axios[method](url, eventData).then(response => {
        alert('Success!');
        location.href = '/'
      })
      .catch(error => {
        if(error.response)
          alert(JSON.stringify(error.response.data.errors))
        else
          alert(error)
      });
    }
